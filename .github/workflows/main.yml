name: main
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  test:
    strategy:
      matrix:
        # TODO: work on windows-latest compatibility?
        os: [macos-latest, ubuntu-latest]
        python-version: ['2.7', '3.5', '3.6', '3.7', '3.8']
    runs-on: ${{ matrix.os }}
    name: test (py${{ matrix.python-version }} ${{ matrix.os }})
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python_version: ${{ matrix.python-version }}
    - if: ${{ matrix.os != 'macos-latest' }}
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: pip-${{ matrix.os }}-py${{ matrix.python-version }}-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          pip-${{ matrix.os }}-py${{ matrix.python-version }}-${{ hashFiles('Pipfile.lock') }}
          pip-${{ matrix.os }}-py${{ matrix.python-version }}-
    - if: ${{ matrix.os == 'macos-latest' }}
      uses: actions/cache@v1
      with:
        path: ~/Library/Caches/pip
        key: pip-${{ matrix.os }}-py${{ matrix.python-version }}-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          pip-${{ matrix.os }}-py${{ matrix.python-version }}-${{ hashFiles('Pipfile.lock') }}
          pip-${{ matrix.os }}-py${{ matrix.python-version }}-
    - uses: actions/cache@v1
      with:
        path: ~/.local/share/virtualenvs
        key: virtualenvs-${{ matrix.os }}-py${{ matrix.python-version }}-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          virtualenvs-${{ matrix.os }}-py${{ matrix.python-version }}-${{ hashFiles('Pipfile.lock') }}
          virtualenvs-${{ matrix.os }}-py${{ matrix.python-version }}-
    - run: pip install -U pipenv pip
    - if: "${{ matrix.python-version == '2.7' || matrix.python-version == '3.5' }}"
      run: 'pipenv install --skip-lock && pipenv run pip install pytest pytest-cov'
    - if: "${{ matrix.python-version != '2.7' && matrix.python-version != '3.5' }}"
      run: pipenv install --dev
    - run: pip freeze
    - if: "${{ matrix.python-version != '2.7' && matrix.python-version != '3.5' }}"
      run: make fmt-local
    - if: "${{ matrix.python-version != '2.7' && matrix.python-version != '3.5' }}"
      run: make lint-local
    - run: make test-local
  prerelease-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python_version: 3.8.x
    - run: pip install -U pipenv pip
    - run: pipenv install --dev --pre
    - run: pip freeze
    - run: make fmt-local
    - run: make lint-local
    - run: make test-local
  distributions:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - run: pip install --user --upgrade twine setuptools wheel
    - run: make dist
    - uses: actions/upload-artifact@v2
      with:
        name: distributions
        path: dist/
  docs:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: make docs
    - uses: actions/upload-artifact@v2
      with:
        name: docs
        path: docs/site/
